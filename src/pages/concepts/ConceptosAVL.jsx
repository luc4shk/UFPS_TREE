import { TreeSlides } from "../../components/TreeSlides";


export const ConceptosAVL = () => {

    const slides = [
        {
            title: '√Årbol Binario AVL (Adelson-Velskii y Landis)',
            content: <div className="text-center"> El √Årbol Binario AVL (Adelson-Velskii y Landis) es una estructura de datos de tipo √°rbol binario de b√∫squeda que incorpora un mecanismo de autobalanceo. Fue introducido en 1962 por los matem√°ticos sovi√©ticos Georgy Adelson-Velskii y Evgenii Landis, quienes buscaron mejorar la eficiencia de las operaciones realizadas en los √°rboles binarios de b√∫squeda est√°ndar, los cuales pueden volverse desequilibrados durante inserciones o eliminaciones. <br />
                <br /><b>&quot;En un √°rbol de b√∫squeda, cada nodo tiene un valor que es siempre m√°s grande que todos los valores de los nodos a su izquierda y m√°s peque√±o que todos los valores de los nodos a su derecha.&quot;</b>
                <br /><br /> Los √°rboles AVL son ampliamente utilizados en algoritmos y sistemas donde la eficiencia en las b√∫squedas es clave, como bases de datos, sistemas de archivos y aplicaciones en tiempo real. </div>
        },
        {
            title: 'Conceptos B√°sicos de un √°rbol AVL',
            content:
                <ul className="list-disc list-inside">
                    <li><b>Nodos</b>: Cada nodo almacena informaci√≥n adicional para ayudar al balanceo, como su altura o su factor de balanceo.</li>
                    <li><b>Hojas</b>: Nodos sin hijos.</li>
                    <li><b>Altura del √°rbol</b>: su altura siempre ser√° proporcional al logaritmo del n√∫mero de nodos (ùëÇ(log‚Å°ùëõ) O(logn)).

                    </li>
                    <li><b>Equilibrio:</b> El √°rbol AVL es balanceado por altura, esto quiere decir que, la
                        diferencia de alturas entre los sub√°rboles izquierdo y derecho de cualquier nodo nunca es mayor que 1.
                    </li>
                </ul>
        },
        {
            title: 'Propiedades de un √Årbol AVL',
            content:
                <ul className="list-disc list-inside">
                    <li><b>Altura controlada: </b> La altura m√°xima de un √°rbol AVL con ùëõ nodos est√° limitada por ùëÇ(log‚Å° ùëõ) O(logn).
                        Esto evita que las operaciones se degraden como en un √°rbol binario de b√∫squeda no balanceado.
                    </li>
                    <br />
                    <li><b>Nodos con Informaci√≥n extra:</b> Cada nodo del √°rbol almacena un valor adicional, como la altura del sub√°rbol o el factor de balanceo, para facilitar la verificaci√≥n del equilibrio.
                    </li>
                    <br />
                    <li><b>Inserci√≥n y Eliminaci√≥n Autobalanceadas:</b> Tras agregar un nodo, el √°rbol verifica y ajusta el balance mediante rotaciones.
                        al eliminar un nodo, se reajusta la estructura si es necesario para mantener el balance.
                    </li>
                </ul>
        },

        {
            title: 'Recorridos del AVL',
            content:
                <ul className="list-disc list-inside">
                    <li><b>Inorden</b>: Se procesan los nodos en el siguiente orden, primero el sub√°bol izquierdo luego el nodo raiz y finaliza con el sub√°rbol derecho. Los elementos del √°rbol AVL se obtienen en orden ascendente
                    </li>
                    <br />
                    <li><b>Preorden</b>: Se procesan los nodos en el siguiente orden, primero el nodo ra√≠z luego el sub√°rbol izquierdo y finaliza con el sub√°rbol derecho. √ötil para almacenar la estructura del √°rbol o replicarlo

                    </li>
                    <br />
                    <li><b>Postorden</b>: Primero recorre el sub√°rbol izquierdo, luego el derecho y finalmente el
                        nodo ra√≠z. Esto es √∫til para liberar memoria (eliminar nodos) o evaluar expresiones matem√°ticas representadas en el √°rbol.
                    </li>
                </ul>
        },
        {
            title: 'Eficiencia del √Årbol AVL',
            content:
                <ul className="list-disc list-inside">
                    <li> El balanceo constante asegura una altura m√≠nima, lo que hace que los √°rboles AVL sean ideales para aplicaciones donde las operaciones de b√∫squeda sean frecuentes y cr√≠ticas.
                    </li>
                    <br />
                    <li> <b>Balanceo por altura: </b> Se asegura que todas las operaciones b√°sicas (b√∫squeda, inserci√≥n, eliminaci√≥n) se realicen en tiempo ùëÇ(log‚Å°ùëõ) O(logn).
                    </li>
                    <br />
                    <li><b>Balanceo</b>: La diferencia de altura entre los sub√°rboles izquierdo y derecho de cualquier nodo (denominado factor de balanceo) no puede ser mayor que 1 ni menor que -1. </li>
                </ul>
        },
        {
            title: 'Aplicaciones de los AVL',
            content:
                <ul className="list-disc list-inside">
                    <li><b>Sistemas de archivos:</b> En sistemas operativos, los √°rboles AVL son √∫tiles para organizar y acceder a archivos, pueden representar estructuras jer√°rquicas de directorios de forma eficiente.
                    </li>
                    <br />
                    <li><b>Motores de b√∫squeda:</b> Se emplean para implementar √°rboles de palabras o t√©rminos, optimizando la recuperaci√≥n de datos o el autocompletado en motores de b√∫squeda, su balanceo asegura b√∫squedas r√°pidas de t√©rminos indexados.

                    </li>
                    <br />
                    <li><b>Analisis l√©xico y sint√°ctico: </b> En compiladores, los √°rboles AVL son √∫tiles para almacenar tablas de s√≠mbolos o manejar gram√°ticas,
                        su estructura garantiza un acceso r√°pido y ordenado a los identificadores.
                    </li>
                    <br />
                    <li><b> Aplicaciones en tiempo real:</b> Se utilizan para organizar datos en problemas como divisiones de planos, representaci√≥n de pol√≠gonos, manejo de eventos en algoritmos geom√©tricos
                    </li>
                </ul>
        }
    ];

    return (
        <TreeSlides slides={slides}></TreeSlides>
    )

}